// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(uuid())
  email      String     @unique
  password   String
  name       String     @unique @db.VarChar(40)
  products   Product[]
  suppliers  Supplier[]
  categories Category[]
}

enum TypeControl {
  UNIT
  WEIGHT
}

enum Status {
  ACTIVE
  INACTIVE
}

model Product {
  id          String      @id @default(uuid())
  name        String
  typeControl TypeControl
  quantity    Int?
  amount      Float?
  status      Status      @default(ACTIVE)
  createAt    DateTime    @default(now())
  updateAt    DateTime    @default(now()) @updatedAt
  supplierId  String?
  supplier    Supplier?   @relation(fields: [supplierId], references: [id])
  categoryId  String?
  category    Category?   @relation(fields: [categoryId], references: [id])
  userId      String
  user        User        @relation(fields: [userId], references: [id])
}

model Supplier {
  id       String    @id @default(uuid())
  name     String
  email    String
  createAt DateTime  @default(now())
  updateAt DateTime  @default(now()) @updatedAt
  products Product[]
  userId   String
  user     User      @relation(fields: [userId], references: [id])
}

model Category {
  id       String    @id @default(uuid())
  name     String
  color    String
  createAt DateTime  @default(now())
  updateAt DateTime  @default(now()) @updatedAt
  products Product[]
  userId   String
  user     User      @relation(fields: [userId], references: [id])
}
